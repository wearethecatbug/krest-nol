{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACqB;;;;;;;;;;;;;;;AC3CrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqB;;;;;;;UC9BrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNoC;AACA;AACpC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,oBAAoB;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC,yBAAyB,cAAc;AACvC,oBAAoB,SAAS,EAAE,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC,yBAAyB,cAAc;AACvC,oBAAoB,SAAS,EAAE,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,EAAE,iDAAS;AACX,gBAAgB,aAAa;AAC7B;AACA;AACA,GAAG;AACH,EAAE,iDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAS;AACT;AACA;AACA","sources":["webpack://krest-nol-game/./src/arrow.js","webpack://krest-nol-game/./src/popup.js","webpack://krest-nol-game/webpack/bootstrap","webpack://krest-nol-game/webpack/runtime/define property getters","webpack://krest-nol-game/webpack/runtime/hasOwnProperty shorthand","webpack://krest-nol-game/webpack/runtime/make namespace object","webpack://krest-nol-game/./src/index.js"],"sourcesContent":["function getPosition(element) {\r\n\treturn {\r\n\t\tx: element.offsetLeft + element.offsetWidth / 2,\r\n\t\ty: element.offsetTop + element.offsetHeight / 2 - element.offsetHeight / 2 - 4\r\n\t};\r\n}\r\n\r\nfunction getDistance(a, b) {\r\n\tconst from = getPosition(a);\r\n\tconst to = getPosition(b);\r\n\r\n\treturn {\r\n\t\t//https://stackoverflow.com/a/17628488/529024\r\n\t\tdistance: Math.hypot(from.x - to.x, from.y - to.y),\r\n\t\tangle: (Math.atan2(to.x - from.x, from.y - to.y) * 180) / Math.PI,\r\n\t\tposition: {\r\n\t\t\tstart: from,\r\n\t\t\tend: to\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Рисует линию от элемента 1 до элемента 2\r\n * @param elementId1 айди элемента 1\r\n * @param elementId2 айди элемента 2\r\n */\r\nfunction drawArrow(elementId1, elementId2) {\r\n\t// Get values and elements then set style\r\n\tconst values = getDistance(\r\n\t\tdocument.querySelector(elementId1),\r\n\t\tdocument.querySelector(elementId2)\r\n\t);\r\n\r\n\tlet wrapper = document.querySelector(\"#gameContainer\");\r\n\tlet arrow = document.querySelector(\"#arrow\");\r\n\tlet bottom = wrapper.offsetHeight - values.position.start.y;\r\n\tarrow.style.height = values.distance + \"px\";\r\n\tarrow.style.transform = `rotate(${values.angle}deg)`;\r\n\tarrow.style.bottom = bottom + \"px\";\r\n\tarrow.style.left = values.position.start.x + \"px\";\r\n}\r\n\r\nexport { drawArrow };\r\n","let IS_POPUP_INIT = false;\r\n\r\n/**\r\n * Показывает попап, и вызвает функцию коллбек при закрытии\r\n * @param content текст который пишется в попап\r\n * @param onClose функция которая будет вызвана при закрытии\r\n */\r\nfunction showPopup(content, onClose) {\r\n\tlet popup = document.querySelector(\"#popup\");\r\n\tlet contentDiv = document.querySelector(\"#popupContent\");\r\n\r\n\tif (!IS_POPUP_INIT) {\r\n\t\tlet closeButton = document.querySelector(\"#popupClose\");\r\n\t\tcloseButton.onclick = function () {\r\n\t\t\tpopup.style.display = \"none\";\r\n\t\t\tif (onClose) onClose();\r\n\t\t};\r\n\r\n\t\twindow.onclick = function (event) {\r\n\t\t\tif (event.target == popup) {\r\n\t\t\t\tpopup.style.display = \"none\";\r\n\t\t\t\tif (onClose) onClose();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tpopup.style.display = \"block\";\r\n\tcontentDiv.innerHTML = content;\r\n}\r\n\r\nexport { showPopup };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { drawArrow } from \"./arrow\";\r\nimport { showPopup } from \"./popup\";\r\n\r\n/**\r\n * Энам стили для клеток, крестик, нолик, дизейбл\r\n * @readonly\r\n * @enum {string}\r\n */\r\nconst CellStyles = {\r\n\tTic: \"style-zero\",\r\n\tTac: \"style-cross\",\r\n\tDisabled: \"disabled\"\r\n};\r\n\r\n/**\r\n * Энам тип клетки игрового поля, крест, нолик или пустое.\r\n * @readonly\r\n * @enum {number}\r\n */\r\nconst CellType = {\r\n\tNone: 0,\r\n\tTic: 1,\r\n\tTac: 2\r\n};\r\n\r\n/**\r\n * Энам тип гейм овера, игра заканчивается либо как победа либо как поражение\r\n * @readonly\r\n * @enum number\r\n */\r\nconst GameOverType = {\r\n\tWin: 0,\r\n\tDraw: 1\r\n};\r\n\r\n/**\r\n * Конструктор модели игрока, хранит данные о игроке по типу имени, коиличества побед и т.д\r\n * @param name {string} имя игрока\r\n * @param cellType {CellType}\r\n * @property {number} wins колчество побед\r\n * @constructor\r\n */\r\nfunction User(name, cellType) {\r\n\tthis.name = name;\r\n\tthis.wins = 0;\r\n\tthis.defeats = 0;\r\n\tthis.draws = 0;\r\n\tthis.cellType = cellType;\r\n\r\n\tthis.toString = function () {\r\n\t\treturn name;\r\n\t};\r\n}\r\n\r\n/**\r\n * Игровое поле, двумерный массив номеров, либо же значний из энама GameFieldCellType\r\n * @typedef {CellType[][]} GameField\r\n */\r\n\r\n/**\r\n * Игровое поле это двумерный массив 3х3, в каждой ячейке игрового поля либо крестик, либо нолик, либо пусто\r\n * @type {GameField}\r\n */\r\nlet gameField;\r\n\r\n/**\r\n * Текущий юзер, тоесть тот пользователь что сейчас делает ход\r\n * @type {User}\r\n */\r\nlet currentUser;\r\n\r\n/**\r\n * Какой сейчас ход, цифра, начинается с 0 заканичвается 9тью\r\n * @type {number}\r\n */\r\nlet turn;\r\n\r\nfunction checkWinner(gameField) {\r\n\t/**\r\n\t * Список выигрышных комбинаций\r\n\t * @type {CellType[][]}\r\n\t */\r\n\tlet GameWinCombinations = [\r\n\t\t[gameField[0][0], gameField[0][1], gameField[0][2]],\r\n\t\t[gameField[1][0], gameField[1][1], gameField[1][2]],\r\n\t\t[gameField[2][0], gameField[2][1], gameField[2][2]],\r\n\t\t[gameField[0][0], gameField[1][0], gameField[2][0]],\r\n\t\t[gameField[0][1], gameField[1][1], gameField[2][1]],\r\n\t\t[gameField[0][2], gameField[1][2], gameField[2][2]],\r\n\t\t[gameField[0][0], gameField[1][1], gameField[2][2]],\r\n\t\t[gameField[0][2], gameField[1][1], gameField[2][0]]\r\n\t];\r\n\r\n\tfor (let currentCombination of GameWinCombinations) {\r\n\t\tif (currentCombination[0] === 0) {\r\n\t\t\tcontinue;\r\n\t\t} else if (\r\n\t\t\tcurrentCombination[0] === currentCombination[1] &&\r\n\t\t\tcurrentCombination[0] === currentCombination[2]\r\n\t\t) {\r\n\t\t\treturn currentCombination[0];\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n/**\r\n * Производит ресет игрового поля, выставляя его в начальное состояние, пустое поле и все ячейки можно кликать.\r\n */\r\nfunction resetGameField() {\r\n\t//т.к во время игры мы меняем геймфилд выставляя в него нужные значения крестика или нолика, нужно его выставить в начальное состояние когда все клетки пустыеы\r\n\tgameField = [\r\n\t\t[CellType.None, CellType.None, CellType.None],\r\n\t\t[CellType.None, CellType.None, CellType.None],\r\n\t\t[CellType.None, CellType.None, CellType.None]\r\n\t];\r\n\r\n\t//для каждой ячейки нужно обновить данные, убрать ненужные стили и т.д\r\n\tfor (let rowIndex = 0; rowIndex < 3; rowIndex++) {\r\n\t\tfor (let colIndex = 0; colIndex < 3; colIndex++) {\r\n\t\t\tlet id = `[id=\"${rowIndex}${colIndex}\"]`;\r\n\t\t\tlet cell = document.querySelector(id);\r\n\t\t\t//удаляем установленые стили, иконку крестика, иконку нолика, дизейблед\r\n\t\t\tcell.classList.remove(\r\n\t\t\t\tCellStyles.Tic,\r\n\t\t\t\tCellStyles.Tac,\r\n\t\t\t\tCellStyles.Disabled\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Задает слушателей к элеентам на странице, например слушателей клика мышкой по клеткам игрового поля\r\n */\r\nfunction addGameListeners() {\r\n\tfor (let rowIndex = 0; rowIndex < 3; rowIndex++) {\r\n\t\tfor (let colIndex = 0; colIndex < 3; colIndex++) {\r\n\t\t\tlet id = `[id=\"${rowIndex}${colIndex}\"]`;\r\n\t\t\tlet cell = document.querySelector(id);\r\n\t\t\tcell.addEventListener(\r\n\t\t\t\t\"click\",\r\n\t\t\t\tcellOnClickEvent.bind(cell, rowIndex, colIndex) //используем байнд что бы передать индксы клетки rowIndex, colIndex\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Реакция на клик мышкой по игровой клетке\r\n * @param rowIndex индекс строки в которой лежит клетка\r\n * @param colIndex индкс столбца в котором лежит клетка\r\n * @param event\r\n */\r\nfunction cellOnClickEvent(rowIndex, colIndex, event) {\r\n\tthis.classList.add(CellStyles.Disabled); //устанавливаем стиль дизейблед, который выключает взаимодействие с мышкой\r\n\tgameField[rowIndex][colIndex] = currentUser.cellType; //в игровое поле выставляем соотвествующий тип, это будет тип текущего игрока, и это будет или крест или нолик\r\n\r\n\t//класс лист тугл, первым параметром передается стиль, вторым условие, есилу словие true стиль включается если false выключается\r\n\tthis.classList.toggle(\r\n\t\tCellStyles.Tic,\r\n\t\tcurrentUser.cellType === CellType.Tac &&\r\n\t\t\tcurrentUser.cellType !== CellType.None\r\n\t);\r\n\r\n\tthis.classList.toggle(\r\n\t\tCellStyles.Tac,\r\n\t\tcurrentUser.cellType === CellType.Tic &&\r\n\t\t\tcurrentUser.cellType !== CellType.None\r\n\t);\r\n\r\n\t//так как клик по клетке у нас это совершение хода, то заверашем ход вызвав соотвествующую функцию\r\n\t//завершаем ход с небольшим таймаутом, т.к браузеру нужно время что бы перерисовать клетку и нарисовать там иконку\r\n\tsetTimeout(endOfTurn, 66);\r\n}\r\n\r\n/**\r\n * Функция окончания хода, должна проверять не был ли совершен победный ход, не было ли ничеьй, в противном случае передавать ход\r\n */\r\nfunction endOfTurn() {\r\n\tturn++;\r\n\t//Определяем есть ли выигрышные комбинации\r\n\tif (checkWinner(gameField) === currentUser.cellType) {\r\n\t\tgameOver(GameOverType.Win);\r\n\t} else if (turn === 9) {\r\n\t\t//если выигрышных комбинаций не было но это последний ход т.е 9ый то ничья\r\n\t\tgameOver(GameOverType.Draw);\r\n\t} else {\r\n\t\t//если не было ни победы ни ничьей то это означит что нужно перейти к следующему ходу тоесть передать ход следующему игроку\r\n\t\tcurrentUser = currentUser === user1 ? user2 : user1;\r\n\t}\r\n}\r\n\r\n/**\r\n * Начинает новую игру, обновляет все игровые параметры и выставляет\r\n * им начальное значние turn - 0, игровое поле - пустое и т.д\r\n */\r\nfunction startNewGame() {\r\n\t//делаем игровое поле активным для кликов\r\n\tdocument\r\n\t\t.querySelector(\"#gameContainer\")\r\n\t\t.classList.remove(CellStyles.Disabled);\r\n\tresetGameField();\r\n\tcurrentUser = user1;\r\n\tturn = 0;\r\n}\r\n\r\n/**\r\n * функция окончания игры, тут происходит переход в како то завершающее состояние, когда по игровому полю уже нельзя больше кликать и тому подобное\r\n * @param gameOverType {GameOverType} тип гейм овера\r\n */\r\nfunction gameOver(gameOverType) {\r\n\t//делаем игровое поле неактивным для кликов\r\n\tdocument.querySelector(\"#gameContainer\").classList.add(CellStyles.Disabled);\r\n\tif (gameOverType === GameOverType.Win) {\r\n\t\t//drawArrow(`[id=\"10\"]`, `[id=\"12\"]`); //можно рисовать линию показывающую какая комбинация победила\r\n\t\tshowPopup(\r\n\t\t\t`Победил!: ${currentUser} <img src='fgfgfg.gif' width='16' height='16'>`,\r\n\t\t\tstartNewGame\r\n\t\t);\r\n\t} else {\r\n\t\tshowPopup(\r\n\t\t\t`Ничия!<img src='fgfgfg.gif' width='16' height='16'>`,\r\n\t\t\tstartNewGame\r\n\t\t);\r\n\t}\r\n}\r\n\r\n//иницилизируем игру, создает пользователей, вызваем функцию добавляющее события мыши, вызваем стартгейм\r\nlet user1 = new User(\"Kit\", CellType.Tac);\r\nlet user2 = new User(\"Nekit\", CellType.Tic);\r\naddGameListeners();\r\n\r\nshowPopup(\r\n\t\"Внимание!<br>Это котожучиная игра.<img src='fgfgfg.gif' width='16' height='16'><br>Котожучила представляет\",\r\n\tstartNewGame\r\n);\r\n"],"names":[],"sourceRoot":""}